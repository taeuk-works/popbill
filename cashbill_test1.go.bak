//package popbill_test

/*func TestRegistIssue(t *testing.T) {
	c, done, _ := aetest.NewContext()
	defer done()

	corpInfo := popbill.CorpInfo{
		CorpNum:     "6618700621",
		CEOName:     "강태욱",
		CorpName:    "주식회사 디오더스",
		Addr:        "경기도 안산시 상록구 예술광장1로 115, 204호",
		BizClass:    "서비스",
		BizType:     "소프트웨어 개발 및 공급",
		ContactName: "강태욱",
		TEL:         "+82324056867",
	}

	bill := corpInfo.CashbillTo(
		strconv.FormatInt(time.Now().UnixNano(), 10),
		popbill.CashbillCustomer{
			Name:"강태욱",
			IdentityNum:"01027616867",
			Usage:linkhub_com.TradeUsageIncomeDeduction,
			TradeOpt:linkhub_com.TradeOptN,
		},
		&popbill.Transaction{
			VAT:1000,
			Supply:10000,
			Sum:11000,
		})

	println(bill)

	err := popbill.RegistIssue(&ods, true, bill)

	assert.NoError(t, err)
}

func TestURL(t *testing.T) {
	c, done, _ := aetest.NewContext()
	defer done()

	ods := odscontext.ODSContext{
		AEContext:    c,
	}

	corpInfo := linkhub_com.CorpInfo{
		CorpNum:     "6618700621",
		CEOName:     "강태욱",
		CorpName:    "주식회사 디오더스",
		Addr:        "경기도 안산시 상록구 예술광장1로 115, 204호",
		BizClass:    "서비스",
		BizType:     "소프트웨어 개발 및 공급",
		ContactName: "강태욱",
		TEL:         "+82324056867",
	}

	bill := corpInfo.CashbillTo(
		strconv.FormatInt(time.Now().UnixNano(), 10),
		linkhub_com.CashbillCustomer{
			Name:"강태욱",
			IdentityNum:"01027616867",
			Usage:linkhub_com.TradeUsageIncomeDeduction,
			TradeOpt:linkhub_com.TradeOptN,
		},
		&linkhub_com.Transaction{
			VAT:1000,
			Supply:10000,
			Sum:11000,
		})

	println(bill)

	err := linkhub_com.RegistIssue(&ods, true, bill)

	url, err := linkhub_com.URL(&ods, true, corpInfo.CorpNum,  bill.MgtKey,"print")

	assert.NoError(t, err)

	println(url)
}

func TestGetInfo(t *testing.T) {
	c, done, _ := aetest.NewContext()
	defer done()

	ods := odscontext.ODSContext{
		AEContext:    c,
	}

	corpInfo := linkhub_com.CorpInfo{
		CorpNum:     "6618700621",
		CEOName:     "강태욱",
		CorpName:    "주식회사 디오더스",
		Addr:        "경기도 안산시 상록구 예술광장1로 115, 204호",
		BizClass:    "서비스",
		BizType:     "소프트웨어 개발 및 공급",
		ContactName: "강태욱",
		TEL:         "+82324056867",
	}

	bill := corpInfo.CashbillTo(
		strconv.FormatInt(time.Now().UnixNano(), 10),
		linkhub_com.CashbillCustomer{
			Name:"강태욱",
			IdentityNum:"01027616867",
			Usage:linkhub_com.TradeUsageIncomeDeduction,
			TradeOpt:linkhub_com.TradeOptN,
		},
		&linkhub_com.Transaction{
			VAT:1000,
			Supply:10000,
			Sum:11000,
		})

	println(bill)

	err := linkhub_com.RegistIssue(&ods, true, bill)

	//info, err := linkhub_com.GetInfo(&ods, true, corpInfo.CorpNum,  bill.MgtKey)
	//info, err := linkhub_com.GetInfo(&ods, true, corpInfo.CorpNum,  "aLJDwZuLogf5ebbQRrec")
	info, err := linkhub_com.GetInfo(&ods, true, corpInfo.CorpNum,  "1561007799421883000")

	assert.NoError(t, err)

	println(odsvalue.ToString(info))
}

func TestGetDetailInfo(t *testing.T) {
	c, done, _ := aetest.NewContext()
	defer done()

	ods := odscontext.ODSContext{
		AEContext:    c,
	}

	corpInfo := linkhub_com.CorpInfo{
		CorpNum:     "6618700621",
		CEOName:     "강태욱",
		CorpName:    "주식회사 디오더스",
		Addr:        "경기도 안산시 상록구 예술광장1로 115, 204호",
		BizClass:    "서비스",
		BizType:     "소프트웨어 개발 및 공급",
		ContactName: "강태욱",
		TEL:         "+82324056867",
	}
	//
	//bill := corpInfo.CashbillTo(
	//	strconv.FormatInt(time.Now().UnixNano(), 10),
	//	linkhub_com.CashbillCustomer{
	//		Name:"강태욱",
	//		IdentityNum:"01027616867",
	//		Usage:linkhub_com.TradeUsageIncomeDeduction,
	//		TradeOpt:linkhub_com.TradeOptN,
	//	},
	//	&linkhub_com.Transaction{
	//		VAT:1000,
	//		Supply:10000,
	//		Sum:11000,
	//	})
	//
	//println(bill)
	//
	//err := linkhub_com.RegistIssue(&ods, true, bill)

	//info, err := linkhub_com.GetDetailInfo(&ods, true, corpInfo.CorpNum,  bill.MgtKey)
	info, err := linkhub_com.GetDetailInfo(&ods, true, corpInfo.CorpNum,  "aLJDwZuLogf5ebbQRrec")

	assert.NoError(t, err)

	println(odsvalue.ToString(info))
}

func TestCancelIssue(t *testing.T) {
	c, done, _ := aetest.NewContext()
	defer done()

	ods := odscontext.ODSContext{
		AEContext:    c,
	}

	//corpInfo := linkhub_com.CorpInfo{
	//	CorpNum:     "6618700621",
	//	CEOName:     "강태욱",
	//	CorpName:    "주식회사 디오더스",
	//	Addr:        "경기도 안산시 상록구 예술광장1로 115, 204호",
	//	BizClass:    "서비스",
	//	BizType:     "소프트웨어 개발 및 공급",
	//	ContactName: "강태욱",
	//	TEL:         "+82324056867",
	//}
	//
	//bill := corpInfo.CashbillTo(
	//	strconv.FormatInt(time.Now().UnixNano(), 10),
	//	linkhub_com.CashbillCustomer{
	//		Name:"강태욱",
	//		IdentityNum:"01027616867",
	//		Usage:linkhub_com.TradeUsageIncomeDeduction,
	//		TradeOpt:linkhub_com.TradeOptN,
	//	},
	//	&linkhub_com.Transaction{
	//		VAT:1000,
	//		Supply:10000,
	//		Sum:11000,
	//	})
	//
	//println(bill)
	//
	//err := linkhub_com.RegistIssue(&ods, true, bill)
	//
	//err = linkhub_com.CancelIssue(&ods, true, corpInfo.CorpNum,  bill.MgtKey)
	err := linkhub_com.CancelIssue(&ods, true, "6618700621",  "FoVd9aYc34QQxWcLivGI")

	assert.NoError(t, err)
}

/*func TestRegistIssue(t *testing.T) {
	ods, finish := test.LocalContext()

	mgtKey, _ := ods.GetSequenceNumberQuick("Cashbill", "20060102", 4, 0)

	corpInfo := taxinvoice.CorpInfo{
		CorpNum:     "2572200520",
		CEOName:     "최경훈",
		CorpName:    "건진",
		Addr:        "경상북도 상주시 외답2길 1",
		BizClass:    "운수",
		BizType:     "화물자동차",
		ContactName: "최경훈",
		TEL:         "+821055581480",
	}

	err := cashbill.RegistIssue(ods, corpInfo.CashbillToOrders(
		mgtKey.Number(),
		&transaction.Transaction{
			VAT:    1000,
			Supply: 10000,
			Sum:    11000,
		},
	))

	ods.LogIfError(err)

	finish()
}

func TestCancelIssue(t *testing.T) {

	ods, finish := test.LocalContext()

	cashbill.CancelIssue(ods, "2572200520", "4QwoUKj5fNXhoQQBUgVe")

	finish()
}

func TestGetInfo(t *testing.T) {
	ods, finish := test.LocalContext()

	corpInfo := taxinvoice.CorpInfo{
		CorpNum:     "2572200520",
		CEOName:     "황진혁",
		CorpName:    "건진",
		Addr:        "경상북도 상주시 외답2길 1",
		BizClass:    "운수",
		BizType:     "화물자동차",
		ContactName: "황진혁",
		TEL:         "+821055581480",
	}

	bill, err := cashbill.GetInfo(ods,
		corpInfo.CashbillToOrders("201809-00000010", nil))

	ods.EndResponseIfError(err)
	ods.DebugLog(bill)

	finish()
}


func TestViewURL(t *testing.T) {
	ods, finish := test.LocalContext()

	url, err := cashbill.URL(ods, "6618700621", "181213-06596", "print")
	ods.EndResponseIfError(err)

	println(url)

	finish()
	}


func TestGetCashbill(t *testing.T) {
	ods, finish := test.LocalContext()

	bill := cashbill.Cashbill{}
	//snap, _ := ods.SnapTo(&bill, "bill", "uKXhdUSLBNOpQshYAtNZ")
	//snap.DataTo(&bill)

	snap, err :=ods.Doc("bill", "BlxdP1R71QhiI9OdOcn2").Get(ods.AEContext)
	ods.LogIfError(err)
	err = snap.DataTo(&bill)
	ods.LogIfError(err)

	ods.DebugLog(snap.Data())
	ods.DebugLog(bill)

	finish()
}*/